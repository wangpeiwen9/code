#! C:\Users\onekey_algo\.conda\envs\onekey_algo\python.exe
# -*- coding: UTF-8 -*-
# Authorized by Vlon Jang
# Home: www.medai.icu
# Email: wangqingbaidu@gmail.com
# Â©2015-2018 All Rights Reserved.
#
# Generated by the CangJeScripts.  DO NOT EDIT!
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import sys

desc = {'obj_covert2voc': '|------------------------------ Function \x1b[36m      obj_covert2voc     \x1b[0m Definition ------------------------------|\n\n    Convert labelme format annotation to onekey_algo training dataset.\n\n    Args:\n        input_dir: str, input dir\n        save_dir: str, output dir\n        labels: str, labels file which contains labels of this dataset.\n        partition: float list, train, valid, test partition.\n        noviz: bool, viz or not.\n\n    Returns:\n\n    ', 'draw_roc': '|------------------------------ Function \x1b[36m         draw_roc        \x1b[0m Definition ------------------------------|\n\n    Draw roc and compute auc for binary classification\n    Args:\n        onekey_result: Onekey result file. filename, probability, prediction, gt\n        save_dir: str, where to save. default ./\n\n    Returns: auc, int\n    ', 'draw_confusion_matrix': '|------------------------------ Function \x1b[36m  draw_confusion_matrix  \x1b[0m Definition ------------------------------|\n\n\n    Args:\n        onekey_result: Onekey result file. filename, probability, prediction, gt\n        class_mapping: mapping class index to readable classes.\n        save_dir: str, where to save jpge file.\n        num_classes: Number of classes.\n\n    Returns:\n\n    ', 'clf_covert2rec': '|------------------------------ Function \x1b[36m      clf_covert2rec     \x1b[0m Definition ------------------------------|\n\n    Convert labelme format annotation to onekey_algo training dataset.\n\n    Args:\n        input_dir: str, input dir\n        save_dir: str, output dir\n        partition: float list, train, valid, test partition.\n\n    Returns:\n\n    ', 'seg_covert2voc': '|------------------------------ Function \x1b[36m      seg_covert2voc     \x1b[0m Definition ------------------------------|\n\n    Convert labelme format annotation to onekey_algo training dataset.\n\n    Args:\n        input_dir: str, input dir\n        save_dir: str, output dir\n        partition: float list, train, valid, test partition.\n        noviz: bool, viz or not.\n\n    Returns:\n\n    '}


if __name__ == "__main__":
    if len(sys.argv) == 1 or 'h' == sys.argv[1].lstrip('-') or 'help' == sys.argv[1].lstrip('-'):
        for d in desc:
            print (desc[d])
    else:
        func_name_partial = sys.argv[1].lstrip('-')
        for d in desc:
            if func_name_partial in d:
                print (desc[d])
